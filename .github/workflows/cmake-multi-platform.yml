name: CMake on multiple platforms
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: List Build Directory
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          ls -l "${{ steps.strings.outputs.build-output-dir }}"
        else
          ls -l ${{ steps.strings.outputs.build-output-dir }}
        fi
      shell: bash

    - name: Create Tag
      id: create_tag
      if: github.ref == 'refs/heads/main'
      shell: pwsh  # Use PowerShell on Windows
      run: |
        $commit_number = git rev-parse --short HEAD
        $tag_name = "dev-$commit_number"
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag $tag_name
        git push origin $tag_name
        echo "tag_name=$tag_name" >> $env:GITHUB_ENV  # Set tag_name as an environment variable

    - name: List Release Directory
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          if [ -d "${{ steps.strings.outputs.build-output-dir }}\${{ matrix.build_type }}" ]; then
            ls -l "${{ steps.strings.outputs.build-output-dir }}\${{ matrix.build_type }}"
          else
            echo "${{ matrix.build_type }} directory not found!"
          fi
        else
          if [ -d "${{ steps.strings.outputs.build-output-dir }}/${{ matrix.build_type }}" ]; then
            ls -l "${{ steps.strings.outputs.build-output-dir }}/${{ matrix.build_type }}"
          else
            echo "${{ matrix.build_type }} directory not found!"
          fi
        fi
      shell: bash

    - name: Publish Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.strings.outputs.build-output-dir }}\${{ matrix.build_type }}\swarmformer.exe
          ${{ steps.strings.outputs.build-output-dir }}/swarmformer
        tag_name: ${{ env.tag_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
